version: '3'

services:
  api: # Node.js App
    container_name: gs-api
    image: "node:12"
    build: .
    ports:
      - "3000:3000" # Expose API port
      - "9229:9229" # Expose Node process debug port (disable for prod)
    environment: # Set ENV vars
      - NODE_ENV=local
      - ES_HOST=elasticsearch
      - PORT=3000
    volumes: # Attach local book data dir
      - ./books:/usr/src/app/books

  frontend: # Nginx Server for frontend app
    container_name: gs-frontend
    image: nginx
    volumes: # Serve local "public" dir
      - ./public:/usr/share/nginx/html
    ports:
      - "8080:80" # Forward site to localhost:8080

  elasticsearch: # elasticsearch Instance
    container_name: gs-search
    # Open Distro
    # image: amazon/opendistro-for-elasticsearch:0.8.0
    # official
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.7.0
    volumes: # Persist ES data in separate "esdata" volume
      - esdata:/usr/share/elasticsearch/data
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    entrypoint:
      - elasticsearch
      - -Ehttp.port=9200
      - -Ehttp.cors.enabled=true
      - -Ehttp.cors.allow-origin=http://localhost:1358,http://127.0.0.1:1358
      - -Ehttp.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization
      - -Ehttp.cors.allow-credentials=true
    user: elasticsearch
    ports:
      - "9200:9200"

  # elasticsearch browser
  dejavu:
    image: appbaseio/dejavu:3.2.3
    container_name: dejavu
    ports:
    - "1358:1358"
    links:
      - elasticsearch

volumes: # Define separate volume for Elasticsearch data
  esdata:
